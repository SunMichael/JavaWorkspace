package com.runoob.sun;

import java.util.List;

import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Date;

public class Basic {

	private static BufferedReader in;
	private static BufferedReader reader;

	public static void main (String args[]) {
		stringFunc();
		arrayFunc();
		dateFunc();
		fileFunc();
	}
	
	static void stringFunc() {
		String one = "Hello World";
		String two = "hello world";
		
		String obj = one.replace("o", "p");
		obj = obj.replaceAll("He", "AB");
		
		obj = obj.toLowerCase();
		obj = obj.toUpperCase();
		
		obj = new StringBuffer(obj).reverse().toString();
		
		String three = "aaa-bbb-ccc";
		String []tmp = three.split("-");
		for(String s : tmp) {
			System.out.println("分割：" + s);
		}
		
		one.regionMatches(2 , two ,2 , 3 );   //对比2个字符指定index2 后面3个字符是否一样
		
		StringBuffer result = new StringBuffer("Hello");
		result.append("world");
		
		
		System.out.println("2字符对比：" + one.equals(two));
		System.out.println("remove:" + removeCharAt(one , 2));
	}
	
	static String removeCharAt(String s, int index) {
		return s.substring(0, index) + s.substring(index + 1);
	}
	
	
	static void arrayFunc() {
		int ary[] = {-4, 2 , 0,-9 ,3,1};
		Arrays.sort(ary);   //排序
		
		int index = Arrays.binarySearch(ary, 2);    //数组
		ary = insertElement(ary , 10, index);
		
		ArrayList<String> aryList = new ArrayList<String>();   //list
		aryList.add("A");
		aryList.add("B");
		aryList.remove(1);
		Collections.reverse(aryList);   //反转
		
		ArrayList<String> oneAry = new ArrayList<String>();
		ArrayList<String> secAry = new ArrayList<String>();
		oneAry.add("A");
		oneAry.add("B");
		secAry.add("A");
		oneAry.containsAll(secAry);     //包含
		oneAry.removeAll(secAry);       //差集
		oneAry.retainAll(secAry);       //交集
		

		
		
		String[] a = {"A" , "B"};
		String[] b = {"C" , "D"};
		List<String> list = new ArrayList<String>( Arrays.asList(a) );
//		for (int i = 0; i < b.length; i++) {
//			list.add(b[i]);
//		}
		list.addAll(Arrays.asList(b));
		System.out.println("ary 合并" + list.toArray());
		
		int array[] = new int[6];
//        Arrays.fill(array, 100);
        for (int i=0, n=array.length; i < n; i++) {
            System.out.println(array[i]);
        }
		
	}


	private static int[] insertElement(int[] ary, int i, int index) {
		// TODO Auto-generated method stub
		int length = ary.length;
		int tmp[] = new int [length + 1];
		System.arraycopy(ary, 0, tmp, 0, index);   //复制ary , 2个数组开始复制的位置，最后是长度
		tmp[index] = i;
		System.arraycopy(ary, index, tmp, index + 1, length - index);
		return tmp;
	}
	
//	@Deprecated
	static void dateFunc() {
		SimpleDateFormat sdf = new SimpleDateFormat();
		sdf.applyPattern("yyyy-MM-dd HH:mm:ss");
		Date date = new Date();
		System.out.println("现在时间：" + sdf.format(date));
		
		long timeStamp = System.currentTimeMillis();
		
		new Date(Long.parseLong(String.valueOf(timeStamp)));    //时间戳转时间
	}
	
	static void fileFunc() throws IOException {
		try {
			BufferedWriter out = new BufferedWriter(new FileWriter("runoob.txt")); //文件名
			out.write("写入文件");  //写入内容
			out.close();
			System.out.println("文件创建成功");
		}catch (IOException e) {
			
		}
		
		try {
			in = new BufferedReader(new FileReader("runoob.txt"));
			String str;
			while((str = in.readLine()) != null) {
				System.out.println("读取的内容：" + str);
			}
		}catch (IOException e) {
			
		}
		
		File file = new File("runoob.txt");
		if(file.delete()) {
			System.out.println(file.getName() + "文件被删除");
		}else {
			System.out.println(file.getName() + "文件删除失败");
		}
		
		try {
			BufferedWriter out1 = new BufferedWriter(new FileWriter("copyfile.txt"));
			out1.write("hello world");
			out1.close();
			FileInputStream inStream = new FileInputStream(new File("copyfile.txt"));
			FileOutputStream  outStream = new FileOutputStream(new File("postfile.txt"));
			
			byte[] buf = new byte[1024];
			while ((inStream.read(buf)) > 0){
				outStream.write(buf);
			}
			inStream.close();
			outStream.close();
			
			reader = new BufferedReader(new FileReader("postfile.txt"));
			String str;
			while((str = reader.readLine()) != null) {
				System.out.println("复制文件内容：" + str);
			}
			reader.close();
		}catch (IOException e) {
			
		}
		
		File fileChange = new File("copyfile.txt");
		fileChange.createNewFile();
		Date fileTime = new Date(fileChange.lastModified());
		fileChange.setLastModified(System.currentTimeMillis());
		fileTime = new Date(fileChange.lastModified());
		System.out.println("修改文件日期：" + fileTime.toString());
	}
	
	
	
	
	
	
	
	
	
	
	
	
}
